// Copyright lowRISC contributors.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0
//
// Register Package auto-generated by `reggen` containing data structure

package trigger_reg_pkg;

  // Param list
  parameter int GPIO_O = 1;

  ////////////////////////////
  // Typedefs for registers //
  ////////////////////////////
  typedef struct packed {
    struct packed {
      logic        q;
      logic        qe;
    } start;
    struct packed {
      logic        q;
      logic        qe;
    } stop;
  } trigger_reg2hw_ctrl_reg_t;


  typedef struct packed {
    logic [31:0] d;
  } trigger_hw2reg_gpio_o_mreg_t;

  typedef struct packed {
    logic        d;
  } trigger_hw2reg_status_reg_t;


  ///////////////////////////////////////
  // Register to internal design logic //
  ///////////////////////////////////////
  typedef struct packed {
    trigger_reg2hw_ctrl_reg_t ctrl; // [4:1]
  } trigger_reg2hw_t;

  ///////////////////////////////////////
  // Internal design logic to register //
  ///////////////////////////////////////
  typedef struct packed {
    trigger_hw2reg_gpio_o_mreg_t [0:0] gpio_o; // [33:2]
    trigger_hw2reg_status_reg_t status; // [1:2]
  } trigger_hw2reg_t;

  // Register Address
  parameter logic [3:0] TRIGGER_GPIO_O_OFFSET = 4'h 0;
  parameter logic [3:0] TRIGGER_CTRL_OFFSET = 4'h 4;
  parameter logic [3:0] TRIGGER_STATUS_OFFSET = 4'h 8;


  // Register Index
  typedef enum int {
    TRIGGER_GPIO_O,
    TRIGGER_CTRL,
    TRIGGER_STATUS
  } trigger_id_e;

  // Register width information to check illegal writes
  parameter logic [3:0] TRIGGER_PERMIT [3] = '{
    4'b 1111, // index[0] TRIGGER_GPIO_O
    4'b 0001, // index[1] TRIGGER_CTRL
    4'b 0001  // index[2] TRIGGER_STATUS
  };
endpackage

